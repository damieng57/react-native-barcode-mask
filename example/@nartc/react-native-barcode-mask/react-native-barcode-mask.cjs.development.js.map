{"version":3,"file":"react-native-barcode-mask.cjs.development.js","sources":["../../../src/BarcodeMask.tsx","../../../src/hocs/withOuterLayout.tsx","../../../src/hooks/useBarcodeFinder.ts","../../../src/hooks/useInternalBarcodeRead.ts","../../../src/hooks/useBarcodeReadAndroid.ts","../../../src/hooks/useBarcodeReadIOS.ts","../../../src/hooks/useCustomBarcodeReadAndroid.ts","../../../src/hooks/useCustomBarcodeReadIOS.ts","../../../src/index.ts"],"sourcesContent":["import React, { FC, memo } from 'react';\nimport { LayoutChangeEvent, StyleSheet, View, ViewStyle } from 'react-native';\nimport Animated, { Easing } from 'react-native-reanimated';\nimport { WithOuterLayoutProps } from './interfaces';\n\nconst { Value, Clock, block, cond, set, startClock, timing, eq } = Animated;\n\ntype DimensionUnit = string | number;\ntype EdgePosition = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\n/**\n *\n */\nexport type RunTimingFn = (\n  clock: Animated.Clock,\n  value: number,\n  destination: number,\n  duration: number\n) => Animated.Node<number>;\n\nexport type OnLayoutChangeHandler = (event: LayoutChangeEvent) => void;\n\n/**\n * @name BarcodeMaskProps\n * @description Props of BarcodeMask component\n */\nexport interface BarcodeMaskProps extends WithOuterLayoutProps {\n  /**\n   * @name width\n   * @type DimensionUnit\n   * @description Width of the Barcode Finder Area\n   * @default 280\n   */\n  width?: DimensionUnit;\n  /**\n   * @name height\n   * @type DimensionUnit\n   * @description Height of the Barcode Finder Area\n   * @default 230\n   */\n  height?: DimensionUnit;\n  /**\n   * @name edgeWidth\n   * @type number\n   * @description Width of corner edges\n   * @default 20\n   */\n  edgeWidth?: number;\n  /**\n   * @name edgeHeight\n   * @type number\n   * @description Height of corner edges\n   * @default 20\n   */\n  edgeHeight?: DimensionUnit;\n  /**\n   * @name edgeColor\n   * @type string\n   * @description Color of corner edges\n   * @default #fff\n   */\n  edgeColor?: string;\n  /**\n   * @name edgeRadius\n   * @type number\n   * @description Border Radius of corner edges\n   * @default 0\n   */\n  edgeRadius?: number;\n  /**\n   * @name edgeBorderWidth\n   * @type DimensionUnit\n   * @description Thickness of corner edges\n   * @default 4\n   */\n  edgeBorderWidth?: DimensionUnit;\n  /**\n   * @name backgroundColor\n   * @type string\n   * @description Background color of Outer Finder Area\n   * @default #eee\n   */\n  backgroundColor?: string;\n  /**\n   * @name maskOpacity\n   * @type number\n   * @description Opacity of Outer Finder Area\n   * @default 1\n   */\n  maskOpacity?: number;\n  /**\n   * @name showAnimatedLine\n   * @type boolean\n   * @description Whether to show Animated Line\n   * @default true\n   */\n  showAnimatedLine?: boolean;\n  /**\n   * @name startValue\n   * @type number\n   * @description Start value of Animated Line (only applicable if `showAnimatedLine` is set to `true`)\n   * @default 0\n   */\n  startValue?: number;\n  /**\n   * @name destinationValue\n   * @type number\n   * @description Destination value of Animated Line (depends on`animatedLineOrientation`)\n   * @default Computed by the length of the respective orientation minus the `animatedLineThickness`\n   */\n  destinationValue?: number;\n  /**\n   * @name animatedComponent\n   * @type Function\n   * @param width\n   * @param height\n   */\n  animatedComponent?: (width: number, height: number) => React.ReactElement;\n  /**\n   * @name animatedLineThickness\n   * @type number\n   * @description Thickness of Animated Line\n   * @default 2\n   */\n  animatedLineThickness?: number;\n  /**\n   * @name animatedLineOrientation\n   * @type 'vertical' | 'horizontal'\n   * @description Orientation that the Animated Line will be drawn\n   * @default 'horizontal'\n   */\n  animatedLineOrientation?: 'vertical' | 'horizontal';\n  /**\n   * @name animatedLineColor\n   * @type string\n   * @description Color of Animated Line\n   * @default #fff\n   */\n  animatedLineColor?: string;\n  /**\n   * @name animationDuration\n   * @type number\n   * @description Duration of Animated Line animation (in ms)\n   * @default 2000\n   */\n  animationDuration?: number;\n  /**\n   * @name runTimingFn\n   * @type RunTimingFn\n   * @description Function to trigger the animation\n   * @default internal `runTiming` function\n   */\n  runTimingFn?: RunTimingFn;\n  /**\n   * @name onLayoutChange\n   * @type OnLayoutChangeHandler\n   * @description Handler to handle LayoutChange. Useful if you want to only detect barcode inside the Finder Area.\n   *   This will be provided from a custom hook that this library also provides.\n   * @default noop\n   */\n  onLayoutChange?: OnLayoutChangeHandler;\n}\n\nconst runTiming: RunTimingFn = (\n  clock: Animated.Clock,\n  value: number,\n  destination: number,\n  duration: number\n) => {\n  const timingState: Animated.TimingState = {\n    finished: new Value(0),\n    position: new Value(value),\n    time: new Value(0),\n    frameTime: new Value(0),\n  };\n\n  const timingConfig: Animated.TimingConfig = {\n    duration,\n    toValue: new Value(destination),\n    easing: Easing.inOut(Easing.ease),\n  };\n\n  return block([\n    startClock(clock),\n    timing(clock, timingState, timingConfig),\n    cond(timingState.finished, [\n      set(timingState.finished, 0),\n      set(timingState.time, 0),\n      set(timingState.frameTime, 0),\n      set(\n        timingState.position,\n        cond(eq(timingState.position, destination), destination, value)\n      ),\n      set(\n        timingConfig.toValue as Animated.Value<number>,\n        cond(eq(timingState.position, destination), value, destination)\n      ),\n    ]),\n    timingState.position,\n  ]);\n};\n\nconst noop = () => {};\n\nexport const BarcodeMask: FC<BarcodeMaskProps> = memo(\n  ({\n    width,\n    height,\n    startValue,\n    destinationValue,\n    backgroundColor,\n    edgeBorderWidth,\n    edgeColor,\n    edgeHeight,\n    edgeWidth,\n    edgeRadius,\n    maskOpacity,\n    animatedComponent,\n    animatedLineColor,\n    animatedLineOrientation,\n    animatedLineThickness,\n    animationDuration,\n    showAnimatedLine,\n    runTimingFn,\n    onLayoutChange,\n    outerBoundingRect,\n    onOuterLayout,\n  }) => {\n    const edgeBorderStyle = React.useRef<\n      {\n        [position in EdgePosition]: ViewStyle;\n      }\n    >({\n      topRight: {\n        borderRightWidth: edgeBorderWidth as number,\n        borderTopWidth: edgeBorderWidth as number,\n        borderTopRightRadius: edgeRadius,\n        top: -(edgeBorderWidth as number),\n        right: -(edgeBorderWidth as number),\n      },\n      topLeft: {\n        borderTopWidth: edgeBorderWidth as number,\n        borderLeftWidth: edgeBorderWidth as number,\n        borderTopLeftRadius: edgeRadius,\n        top: -(edgeBorderWidth as number),\n        left: -(edgeBorderWidth as number),\n      },\n      bottomRight: {\n        borderBottomWidth: edgeBorderWidth as number,\n        borderRightWidth: edgeBorderWidth as number,\n        borderBottomRightRadius: edgeRadius,\n        bottom: -(edgeBorderWidth as number),\n        right: -(edgeBorderWidth as number),\n      },\n      bottomLeft: {\n        borderBottomWidth: edgeBorderWidth as number,\n        borderLeftWidth: edgeBorderWidth as number,\n        borderBottomLeftRadius: edgeRadius,\n        bottom: -(edgeBorderWidth as number),\n        left: -(edgeBorderWidth as number),\n      },\n    });\n\n    const _animatedLineDimension = (\n      dimension: DimensionUnit | undefined,\n      outerDimension: 'width' | 'height'\n    ) => {\n      const outer = outerBoundingRect?.[outerDimension] ?? 0;\n      if (dimension) {\n        if (typeof dimension === 'number') {\n          return dimension * 0.9;\n        }\n        return dimension.endsWith('%')\n          ? (Number(dimension.split('%')[0]) / 100) * (outer || 1) * 0.9\n          : Number(dimension.split(/\\d+/)[0]) * (outer || 1) * 0.9;\n      }\n      return outer * 0.9;\n    };\n\n    const _animatedValue = (\n      dimension: DimensionUnit | undefined,\n      outerDimension: 'width' | 'height'\n    ) => {\n      const calculatedDimension = _animatedLineDimension(\n        dimension,\n        outerDimension\n      );\n      const fullDimension = calculatedDimension / 0.9;\n\n      return fullDimension - (animatedLineThickness as number);\n    };\n\n    const _animatedLineStyle = () => {\n      if (animatedLineOrientation === 'horizontal') {\n        const _width = _animatedLineDimension(width, 'width');\n        const destination = _animatedValue(height, 'height');\n        return {\n          ...styles.animatedLine,\n          height: animatedLineThickness,\n          width: _width,\n          backgroundColor: animatedLineColor,\n          top: runTimingFn!(\n            new Clock(),\n            startValue || 0,\n            destinationValue || destination,\n            animationDuration as number\n          ),\n        };\n      }\n      const _height = _animatedLineDimension(height, 'height');\n      const destination = _animatedValue(width, 'width');\n      return {\n        ...styles.animatedLine,\n        width: animatedLineThickness,\n        height: _height,\n        backgroundColor: animatedLineColor,\n        left: runTimingFn!(\n          new Clock(),\n          startValue || 0,\n          destinationValue || destination,\n          animationDuration as number\n        ),\n      };\n    };\n\n    const _renderEdge = (edgePosition: EdgePosition) => {\n      const defaultStyle = {\n        width: edgeWidth,\n        height: edgeHeight,\n        borderColor: edgeColor,\n        zIndex: 2,\n      };\n      return (\n        <View\n          style={{\n            ...defaultStyle,\n            ...styles[edgePosition],\n            ...edgeBorderStyle.current[edgePosition],\n          }}\n        />\n      );\n    };\n\n    const _width = _animatedLineDimension(width, 'width') / 0.9;\n    const _height = _animatedLineDimension(height, 'height') / 0.9;\n\n    const _renderAnimated = () => {\n      if (showAnimatedLine) {\n        if (animatedComponent) {\n          return animatedComponent(_width, _height);\n        }\n\n        return <Animated.View style={_animatedLineStyle()} />;\n      }\n\n      return null;\n    };\n\n    return (\n      <View style={styles.container}>\n        <View\n          onLayout={onLayoutChange || noop}\n          style={{\n            ...styles.finder,\n            width: _width,\n            height: _height,\n          }}\n        >\n          {_renderEdge('topLeft')}\n          {_renderEdge('topRight')}\n          {_renderEdge('bottomLeft')}\n          {_renderEdge('bottomRight')}\n          {_renderAnimated()}\n        </View>\n        <View style={styles.maskOuter} onLayout={onOuterLayout || noop}>\n          <View\n            style={{\n              ...styles.maskRow,\n              ...{ backgroundColor, opacity: maskOpacity, flex: 1 },\n            }}\n          />\n          <View style={{ height, ...styles.maskCenter }}>\n            <View style={{ backgroundColor, opacity: maskOpacity, flex: 1 }} />\n            <View\n              style={{\n                ...styles.maskInner,\n                width,\n                height,\n                borderRadius: edgeRadius,\n              }}\n            />\n            <View style={{ backgroundColor, opacity: maskOpacity, flex: 1 }} />\n          </View>\n          <View\n            style={{\n              ...styles.maskRow,\n              ...{ backgroundColor, opacity: maskOpacity, flex: 1 },\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n);\n\nBarcodeMask.defaultProps = {\n  width: 280,\n  height: 230,\n  edgeWidth: 20,\n  edgeHeight: 20,\n  edgeColor: '#fff',\n  edgeBorderWidth: 4,\n  edgeRadius: 0,\n  backgroundColor: '#eee',\n  maskOpacity: 1,\n  animatedLineColor: '#fff',\n  animatedLineOrientation: 'horizontal',\n  animatedLineThickness: 2,\n  animationDuration: 2000,\n  runTimingFn: runTiming,\n  showAnimatedLine: true,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...StyleSheet.absoluteFillObject,\n  },\n  finder: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1,\n  },\n  maskOuter: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  maskInner: {\n    backgroundColor: 'transparent',\n  },\n  maskRow: {\n    width: '100%',\n  },\n  maskCenter: {\n    flexDirection: 'row',\n    display: 'flex',\n  },\n  topLeft: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  topRight: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  bottomLeft: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  },\n  bottomRight: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n  },\n  animatedLine: {\n    position: 'absolute',\n    zIndex: 1,\n  },\n});\n","import React, { ComponentType, PureComponent } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { BoundingRect, Optionalize, WithOuterLayoutProps } from '../interfaces';\n\nexport interface WithOuterLayoutHocState {\n  boundingRect: BoundingRect;\n}\n\nexport const withOuterLayout = <\n  T extends WithOuterLayoutProps = WithOuterLayoutProps\n>(\n  WrappedComponent: ComponentType<T>\n) => {\n  const displayName =\n    WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n  return class ComponentWithOuterLayout extends PureComponent<\n    Optionalize<T, WithOuterLayoutProps>,\n    WithOuterLayoutHocState\n  > {\n    public static displayName = `withOuterLayout${displayName}`;\n\n    state: WithOuterLayoutHocState = {\n      boundingRect: { x: 0, y: 0, width: 0, height: 0 },\n    };\n\n    onOuterLayout = (event: LayoutChangeEvent): void => {\n      const {\n        nativeEvent: { layout },\n      } = event;\n      this.setState({ boundingRect: layout });\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          outerBoundingRect={this.state.boundingRect}\n          onOuterLayout={this.onOuterLayout}\n          {...(this.props as T)}\n        />\n      );\n    }\n  };\n};\n","import { Reducer, useCallback, useReducer, useState } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\nimport { BoundingRect, CustomBarcodeRead } from '../interfaces';\n\n/**\n * @internal\n * @param dataProcessor\n * @param onScannedData\n * @param customBarcodeRead\n */\nexport default (\n  dataProcessor: (data: string) => string,\n  onScannedData: (processed: string) => void,\n  customBarcodeRead?: CustomBarcodeRead | number\n) => {\n  const [barcodeRead, setBarcodeRead] = useState(false);\n  const [state, dispatch] = useReducer<\n    Reducer<\n      BoundingRect,\n      {\n        type: 'SET';\n        payload: BoundingRect;\n      }\n    >\n  >(\n    (prev, action) => {\n      switch (action.type) {\n        case 'SET': {\n          return { ...prev, ...action.payload };\n        }\n        default: {\n          return prev;\n        }\n      }\n    },\n    {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0,\n    }\n  );\n  const _onBarcodeFinderLayoutChange = useCallback(\n    (event: LayoutChangeEvent) => {\n      const {\n        nativeEvent: {\n          layout: { height, width, x, y },\n        },\n      } = event;\n      dispatch({ type: 'SET', payload: { height, width, x, y } });\n    },\n    [state.height, state.width, state.x, state.y]\n  );\n\n  let timeoutId = 0;\n  let processingReadBarcode: (data: string) => void;\n\n  if (\n    !customBarcodeRead ||\n    (customBarcodeRead && typeof customBarcodeRead === 'number')\n  ) {\n    timeoutId && clearTimeout(timeoutId);\n    processingReadBarcode = data => {\n      setBarcodeRead(true);\n      onScannedData(dataProcessor(data));\n      timeoutId = setTimeout(() => {\n        setBarcodeRead(false);\n      }, customBarcodeRead);\n    };\n  } else {\n    processingReadBarcode = data => {\n      (customBarcodeRead as CustomBarcodeRead)?.beforeScan?.();\n      onScannedData(dataProcessor(data));\n      (customBarcodeRead as CustomBarcodeRead)?.afterScan?.();\n    };\n  }\n\n  return {\n    barcodeRead:\n      customBarcodeRead && typeof customBarcodeRead === 'object'\n        ? null\n        : barcodeRead,\n    finderX: state.x,\n    finderY: state.y,\n    finderWidth: state.width,\n    finderHeight: state.height,\n    onBarcodeFinderLayoutChange: _onBarcodeFinderLayoutChange,\n    processingReadBarcode,\n  };\n};\n","import { useCallback } from 'react';\nimport { PixelRatio, Platform } from 'react-native';\nimport { BarCodeType, Point, RNCamera, Size } from 'fleetback-react-native-camera';\n\nconst useInternalBarcodeReadIOS = (\n  barcodeRead: boolean,\n  isFocused: boolean,\n  finderX: number,\n  finderY: number,\n  finderWidth: number,\n  finderHeight: number,\n  processingReadBarcode: (data: string) => void\n) =>\n  useCallback(\n    (event: {\n      data: string;\n      bounds:\n        | { width: number; height: number; origin: Array<Point<string>> }\n        | { origin: Point<string>; size: Size<string> };\n      type: keyof BarCodeType;\n    }) => {\n      if (!isFocused || barcodeRead) {\n        return;\n      }\n\n      const {\n        origin: { x, y },\n        size: { width, height },\n      } = event.bounds as { origin: Point<string>; size: Size<string> };\n\n      if (\n        Number(x) >= finderX &&\n        Number(x) + Number(width) <= finderX + finderWidth &&\n        Number(y) >= finderY &&\n        Number(y) + Number(height) <= finderY + finderHeight\n      ) {\n        return processingReadBarcode(event.data);\n      }\n    },\n    [\n      barcodeRead,\n      isFocused,\n      finderX,\n      finderY,\n      finderWidth,\n      finderHeight,\n      processingReadBarcode,\n    ]\n  );\n\nconst useInternalBarcodeReadAndroid = (\n  barcodeRead: boolean,\n  isFocused: boolean,\n  finderX: number,\n  finderY: number,\n  finderWidth: number,\n  finderHeight: number,\n  processingReadBarcode: (data: string) => void\n) =>\n  useCallback(\n    (event: {\n      data: string;\n      bounds:\n        | { width: number; height: number; origin: Array<Point<string>> }\n        | { origin: Point<string>; size: Size<string> };\n      type: keyof BarCodeType;\n    }) => {\n      if (!isFocused || barcodeRead) {\n        return;\n      }\n\n      const _bounds = event.bounds as {\n        width: number;\n        height: number;\n        origin: Point<string>[];\n      };\n      const _pointBounds = _bounds.origin.map(point => ({\n        x: Number(point.x) / PixelRatio.get(),\n        y: Number(point.y) / PixelRatio.get(),\n      }));\n\n      const _insideBox = (point: { x: number; y: number }) => {\n        const { x, y } = point;\n        return (\n          x >= finderX &&\n          x <= finderX + finderWidth &&\n          y >= finderY &&\n          y <= finderY + finderHeight\n        );\n      };\n\n      /**\n       *  0 --------------- 2\n       *  |  PDF417         |\n       *  | /////////////// |\n       *  1 --------------- 3\n       */\n      if (event.type === RNCamera.Constants.BarCodeType.pdf417) {\n        const [topLeft, bottomLeft, topRight, bottomRight] = _pointBounds;\n        if (\n          _insideBox(topLeft) &&\n          _insideBox(bottomLeft) &&\n          _insideBox(topRight) &&\n          _insideBox(bottomRight)\n        ) {\n          processingReadBarcode(event.data);\n          return;\n        }\n      }\n\n      /**\n       *  2 ------ 3\n       *  |\n       *  | QR Code\n       *  |\n       *  1 ------ 0\n       */\n      if (event.type === RNCamera.Constants.BarCodeType.qr) {\n        const [bottomRight, bottomLeft, topLeft, topRight] = _pointBounds;\n        if (\n          _insideBox(bottomRight) &&\n          _insideBox(bottomLeft) &&\n          _insideBox(topLeft) &&\n          _insideBox(topRight)\n        ) {\n          processingReadBarcode(event.data);\n          return;\n        }\n      }\n    },\n    [\n      barcodeRead,\n      isFocused,\n      finderX,\n      finderY,\n      finderWidth,\n      finderHeight,\n      processingReadBarcode,\n    ]\n  );\n\nexport default Platform.select({\n  android: useInternalBarcodeReadAndroid,\n  ios: useInternalBarcodeReadIOS,\n}) as typeof useInternalBarcodeReadAndroid;\n","import useBarcodeFinder from './useBarcodeFinder';\nimport useInternalBarcodeRead from './useInternalBarcodeRead';\n\nexport default (\n  isFocused: boolean,\n  dataProcessor: (data: string) => string,\n  onScannedData: (processed: string) => void,\n  barcodeReadDelay: number = 500\n) => {\n  const {\n    barcodeRead,\n    onBarcodeFinderLayoutChange,\n    finderY,\n    finderX,\n    finderWidth,\n    finderHeight,\n    processingReadBarcode,\n  } = useBarcodeFinder(dataProcessor, onScannedData, barcodeReadDelay);\n\n  const onBarcodeRead = useInternalBarcodeRead(\n    barcodeRead != null ? barcodeRead : false,\n    isFocused,\n    finderX,\n    finderY,\n    finderWidth,\n    finderHeight,\n    processingReadBarcode\n  );\n\n  return {\n    barcodeRead,\n    onBarcodeRead,\n    onBarcodeFinderLayoutChange,\n  };\n};\n","import useBarcodeFinder from './useBarcodeFinder';\nimport useInternalBarcodeRead from './useInternalBarcodeRead';\n\nexport default (\n  isFocused: boolean,\n  dataProcessor: (data: string) => string,\n  onScannedData: (processed: string) => void,\n  barcodeReadDelay: number = 500\n) => {\n  const {\n    barcodeRead,\n    onBarcodeFinderLayoutChange,\n    finderY,\n    finderX,\n    finderWidth,\n    finderHeight,\n    processingReadBarcode,\n  } = useBarcodeFinder(dataProcessor, onScannedData, barcodeReadDelay);\n\n  const onBarcodeRead = useInternalBarcodeRead(\n    barcodeRead != null ? barcodeRead : false,\n    isFocused,\n    finderX,\n    finderY,\n    finderWidth,\n    finderHeight,\n    processingReadBarcode\n  );\n\n  return {\n    barcodeRead,\n    onBarcodeRead,\n    onBarcodeFinderLayoutChange,\n  };\n};\n","import { CustomBarcodeRead, CustomBarcodeReadCallback } from '../interfaces';\nimport useBarcodeFinder from './useBarcodeFinder';\nimport useInternalBarcodeRead from './useInternalBarcodeRead';\n\nexport default (\n  isFocused: boolean,\n  dataProcessor: (data: string) => string,\n  onScannedData: (processed: string) => void,\n  customBarcodeRead: CustomBarcodeRead,\n  customBarcodeReadCallback: CustomBarcodeReadCallback\n) => {\n  const {\n    barcodeRead,\n    onBarcodeFinderLayoutChange,\n    finderY,\n    finderX,\n    finderWidth,\n    finderHeight,\n    processingReadBarcode,\n  } = useBarcodeFinder(dataProcessor, onScannedData, customBarcodeRead);\n\n  return {\n    barcodeRead,\n    onBarcodeRead: customBarcodeReadCallback\n      ? customBarcodeReadCallback(\n          {\n            x: finderX,\n            y: finderY,\n            width: finderWidth,\n            height: finderHeight,\n          },\n          processingReadBarcode\n        )\n      : useInternalBarcodeRead(\n          barcodeRead != null ? barcodeRead : false,\n          isFocused,\n          finderX,\n          finderY,\n          finderWidth,\n          finderHeight,\n          processingReadBarcode\n        ),\n    onBarcodeFinderLayoutChange,\n  };\n};\n","import { CustomBarcodeRead, CustomBarcodeReadCallback } from 'interfaces';\nimport useBarcodeFinder from './useBarcodeFinder';\nimport useInternalBarcodeRead from './useInternalBarcodeRead';\n\nexport default (\n  isFocused: boolean,\n  dataProcessor: (data: string) => string,\n  onScannedData: (processed: string) => void,\n  customBarcodeRead: CustomBarcodeRead,\n  customBarcodeReadCallback: CustomBarcodeReadCallback\n) => {\n  const {\n    barcodeRead,\n    onBarcodeFinderLayoutChange,\n    finderHeight,\n    finderWidth,\n    finderX,\n    finderY,\n    processingReadBarcode,\n  } = useBarcodeFinder(dataProcessor, onScannedData, customBarcodeRead);\n\n  return {\n    barcodeRead,\n    onBarcodeRead: customBarcodeReadCallback\n      ? customBarcodeReadCallback(\n          {\n            x: finderX,\n            y: finderY,\n            width: finderWidth,\n            height: finderHeight,\n          },\n          processingReadBarcode\n        )\n      : useInternalBarcodeRead(\n          barcodeRead != null ? barcodeRead : false,\n          isFocused,\n          finderX,\n          finderY,\n          finderWidth,\n          finderHeight,\n          processingReadBarcode\n        ),\n    onBarcodeFinderLayoutChange,\n  };\n};\n","import { Platform } from 'react-native';\nimport { BarcodeMask } from './BarcodeMask';\nimport { withOuterLayout } from './hocs';\nimport {\n  useBarcodeReadAndroid,\n  useBarcodeReadIOS,\n  useCustomBarcodeReadAndroid,\n  useCustomBarcodeReadIOS,\n} from './hooks';\nimport {\n  BoundingRect,\n  CustomBarcodeRead,\n  CustomBarcodeReadCallback,\n  WithOuterLayoutProps,\n} from './interfaces';\n\nconst useBarcodeRead = Platform.select({\n  android: useBarcodeReadAndroid,\n  ios: useBarcodeReadIOS,\n}) as typeof useBarcodeReadIOS;\n\nconst useCustomBarcodeRead = Platform.select({\n  android: useCustomBarcodeReadAndroid,\n  ios: useCustomBarcodeReadIOS,\n}) as typeof useCustomBarcodeReadIOS;\n\nconst BarcodeMaskWithOuterLayout = withOuterLayout(BarcodeMask);\n\nexport {\n  BarcodeMask,\n  BarcodeMaskWithOuterLayout,\n  useBarcodeRead,\n  useCustomBarcodeRead,\n  CustomBarcodeRead,\n  CustomBarcodeReadCallback,\n  BoundingRect,\n  WithOuterLayoutProps,\n  withOuterLayout,\n};\n"],"names":["Value","Animated","Clock","block","cond","set","startClock","timing","eq","runTiming","clock","value","destination","duration","timingState","finished","position","time","frameTime","timingConfig","toValue","easing","Easing","inOut","ease","noop","BarcodeMask","memo","width","height","startValue","destinationValue","backgroundColor","edgeBorderWidth","edgeColor","edgeHeight","edgeWidth","edgeRadius","maskOpacity","animatedComponent","animatedLineColor","animatedLineOrientation","animatedLineThickness","animationDuration","showAnimatedLine","runTimingFn","onLayoutChange","outerBoundingRect","onOuterLayout","edgeBorderStyle","React","useRef","topRight","borderRightWidth","borderTopWidth","borderTopRightRadius","top","right","topLeft","borderLeftWidth","borderTopLeftRadius","left","bottomRight","borderBottomWidth","borderBottomRightRadius","bottom","bottomLeft","borderBottomLeftRadius","_animatedLineDimension","dimension","outerDimension","outer","endsWith","Number","split","_animatedValue","calculatedDimension","fullDimension","_animatedLineStyle","_width","styles","animatedLine","_height","_renderEdge","edgePosition","defaultStyle","borderColor","zIndex","View","style","current","_renderAnimated","container","onLayout","finder","maskOuter","maskRow","opacity","flex","maskCenter","maskInner","borderRadius","defaultProps","StyleSheet","create","alignItems","justifyContent","absoluteFillObject","flexDirection","display","withOuterLayout","WrappedComponent","displayName","name","boundingRect","x","y","event","layout","nativeEvent","setState","render","state","props","PureComponent","_a","dataProcessor","onScannedData","customBarcodeRead","useState","barcodeRead","setBarcodeRead","useReducer","prev","action","type","payload","dispatch","_onBarcodeFinderLayoutChange","useCallback","timeoutId","processingReadBarcode","clearTimeout","data","setTimeout","beforeScan","afterScan","finderX","finderY","finderWidth","finderHeight","onBarcodeFinderLayoutChange","useInternalBarcodeReadIOS","isFocused","bounds","origin","size","useInternalBarcodeReadAndroid","_bounds","_pointBounds","map","point","PixelRatio","get","_insideBox","RNCamera","Constants","BarCodeType","pdf417","qr","Platform","select","android","ios","barcodeReadDelay","useBarcodeFinder","onBarcodeRead","useInternalBarcodeRead","customBarcodeReadCallback","useBarcodeRead","useBarcodeReadAndroid","useBarcodeReadIOS","useCustomBarcodeRead","useCustomBarcodeReadAndroid","useCustomBarcodeReadIOS","BarcodeMaskWithOuterLayout"],"mappings":"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"}